# Generated by Django 4.1 on 2022-08-15 16:12

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twitter_id', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='EventTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=10)),
                ('synonyms', models.CharField(max_length=60)),
                ('desc', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Liveevent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=200)),
                ('source', models.CharField(max_length=38)),
                ('noise', models.IntegerField()),
                ('value', models.IntegerField()),
                ('notification_level', models.IntegerField()),
                ('confirmed', models.CharField(blank=True, max_length=10, null=True)),
                ('event_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.eventtag')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=30)),
                ('alias', models.CharField(max_length=30)),
                ('coord', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=15)),
                ('coord', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TweetProcessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, verbose_name='User email')),
                ('phone', models.CharField(max_length=20)),
                ('twitter_id', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Whitelist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('twitter_id', models.CharField(max_length=50)),
                ('category', models.CharField(max_length=17)),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_level', models.IntegerField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.location')),
                ('subscription_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.subscriptiontype')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.user')),
            ],
            options={
                'unique_together': {('user_id', 'location')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='subscription',
            field=models.ManyToManyField(to='webapp.usersubscription'),
        ),
        migrations.CreateModel(
            name='TweetData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tweet', models.CharField(max_length=200)),
                ('twitter_user_id', models.CharField(max_length=50)),
                ('tweet_date', models.CharField(max_length=10)),
                ('tweet_time', models.CharField(max_length=10)),
                ('status', models.CharField(blank=True, max_length=33, null=True)),
                ('value', models.IntegerField()),
                ('confirmed', models.CharField(blank=True, max_length=10, null=True)),
                ('live_event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.liveevent')),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation', models.CharField(blank=True, max_length=300, null=True)),
                ('live_event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='webapp.liveevent')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_sent', models.DateTimeField(verbose_name='Date sent')),
                ('user_subscriptions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.usersubscription')),
            ],
        ),
        migrations.AddField(
            model_name='location',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.state'),
        ),
        migrations.AddField(
            model_name='liveevent',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.location'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together={('location', 'state')},
        ),
    ]
